{"version":3,"file":"provider-CFg4W0mD.js","sources":["../../src/modules/achievements/components/ach-editor-dialog/mst/stores/AchEditorDialog.store.ts","../../src/modules/achievements/components/ach-editor-dialog/mst/provider.tsx"],"sourcesContent":["import { type Instance, types } from 'mobx-state-tree'\n\nexport const AchEditorDialog$ = types\n    .model('AchEditorDialog$', {\n        open: false,\n        readonly: false,\n        /* edit_id === edit mode */\n        edit_id: types.maybe(types.string),\n    })\n    .actions((self) => ({\n        onChangeField<Key extends keyof typeof self>(field: Key, value: (typeof self)[Key]) {\n            self[field] = value\n        },\n        onClose() {\n            self.open = false\n            self.readonly = false\n            self.edit_id = undefined\n        },\n        onOpenEditMode(props?: { edit_id?: string }) {\n            self.open = true\n            self.readonly = false\n            self.edit_id = props?.edit_id\n        },\n        onOpenViewMode(props?: { edit_id?: string }) {\n            self.open = true\n            self.readonly = true\n            self.edit_id = props?.edit_id\n        },\n    }))\n\nexport interface IAchEditorDialog$ extends Instance<typeof AchEditorDialog$> {}\n","import { type ReactNode, createContext, useContext } from 'react'\nimport { type IAchEditorDialog$, AchEditorDialog$ } from './stores/AchEditorDialog.store'\nconst storeContext = createContext<IAchEditorDialog$ | null>(null)\n\nexport const achEditorDialog$ = AchEditorDialog$.create({})\n\nexport const useAchEditorDialog$ = (): IAchEditorDialog$ => {\n    const store = useContext(storeContext)\n    if (!store) {\n        throw new Error('useAchEditorDialog$ shall be used within StoreProvider')\n    }\n\n    return store\n}\n\nexport const AchEditorDialog$Provider = ({\n    children,\n    store,\n}: {\n    children: ReactNode\n    store: IAchEditorDialog$\n}) => {\n    return <storeContext.Provider value={store}>{children}</storeContext.Provider>\n}\n"],"names":["AchEditorDialog$","types","model","open","readonly","edit_id","maybe","string","actions","self","onChangeField","field","value","onClose","undefined","onOpenEditMode","props","onOpenViewMode","storeContext","createContext","achEditorDialog$","create","useAchEditorDialog$","store","useContext","Error","AchEditorDialog$Provider","children"],"mappings":"uFAEaA,MAAAA,EAAmBC,EAC3BC,MAAM,mBAAoB,CACvBC,KAAM,GACNC,SAAU,GAEVC,QAASJ,EAAMK,MAAML,EAAMM,MAAM,CACrC,CAAC,EACAC,QAAmBC,IAAA,CAChBC,cAA6CC,EAAYC,EAA2B,CAChFH,EAAKE,CAAK,EAAIC,CAClB,EACAC,SAAU,CACNJ,EAAKN,KAAO,GACZM,EAAKL,SAAW,GAChBK,EAAKJ,QAAUS,MACnB,EACAC,eAAeC,EAA8B,CACzCP,EAAKN,KAAO,GACZM,EAAKL,SAAW,GAChBK,EAAKJ,QAAUW,GAAAA,YAAAA,EAAOX,OAC1B,EACAY,eAAeD,EAA8B,CACzCP,EAAKN,KAAO,GACZM,EAAKL,SAAW,GAChBK,EAAKJ,QAAUW,GAAAA,YAAAA,EAAOX,OAAAA,CAE9B,EAAE,EC1BAa,EAAeC,gBAAwC,IAAI,EAEpDC,EAAmBpB,EAAiBqB,OAAO,CAAE,CAAA,EAE7CC,EAAsBA,IAAyB,CAClDC,MAAAA,EAAQC,aAAWN,CAAY,EACrC,GAAI,CAACK,EACK,MAAA,IAAIE,MAAM,wDAAwD,EAGrEF,OAAAA,CACX,EAEaG,EAA2BA,CAAC,CACrCC,SAAAA,EACAJ,MAAAA,CAIJ,UACYL,EAAa,SAAb,CAAsB,MAAOK,EAAQI,SAAAA,EAAS"}