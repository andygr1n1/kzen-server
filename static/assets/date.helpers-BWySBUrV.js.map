{"version":3,"file":"date.helpers-BWySBUrV.js","sources":["../../src/helpers/date.helpers.ts"],"sourcesContent":["import { set, format, add, sub } from 'date-fns'\n\nexport const setMidnightTime = (date: Date | string): Date => {\n    const newDate = set(date, {\n        hours: 23,\n        minutes: 59,\n        seconds: 59,\n        milliseconds: 59,\n    })\n\n    const timeZoneOffsetInHours = new Date().getTimezoneOffset() / 60\n\n    const stabilizeDateByTimeZone =\n        timeZoneOffsetInHours < 0\n            ? add(newDate, {\n                  hours: Math.abs(timeZoneOffsetInHours),\n              })\n            : sub(newDate, {\n                  hours: Math.abs(timeZoneOffsetInHours),\n              })\n\n    return stabilizeDateByTimeZone\n}\n\nexport const setZeroTime = (date: Date): Date => {\n    const newDate = set(date, {\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        milliseconds: 0,\n    })\n\n    const timeZoneOffsetInHours = new Date().getTimezoneOffset() / 60\n\n    const stabilizeDateByTimeZone =\n        timeZoneOffsetInHours < 0\n            ? add(newDate, {\n                  hours: Math.abs(timeZoneOffsetInHours),\n              })\n            : sub(newDate, {\n                  hours: Math.abs(timeZoneOffsetInHours),\n              })\n\n    return stabilizeDateByTimeZone\n}\n\nexport const convertStringDate = (date: string): Date => {\n    /* removing UTC */\n    return new Date(date.replace(/Z|[\\+\\-]\\d\\d:\\d\\d$/gi, ''))\n}\n\nexport const DaysOfTheWeek = [\n    { value: '1', label: 'Monday' },\n    { value: '2', label: 'Tuesday' },\n    { value: '3', label: 'Wednesday' },\n    { value: '4', label: 'Thursday' },\n    { value: '5', label: 'Friday' },\n    { value: '6', label: 'Saturday' },\n    { value: '0', label: 'Sunday' },\n]\n\nexport const prepareFinishedAtForInsert = (date: Date | string): string => {\n    const updated = set(date, { hours: 23, minutes: 59, seconds: 59, milliseconds: 59 })\n    return formatDateWithTimezone(updated)\n}\n\n// Helper function to get timezone offset in HH:mm format\nfunction getTimezoneOffset(date: Date): string {\n    const offset = date.getTimezoneOffset()\n    const absOffset = Math.abs(offset)\n    const hours = Math.floor(absOffset / 60)\n    const minutes = absOffset % 60\n    return (offset <= 0 ? '+' : '-') + String(hours).padStart(2, '0') + ':' + String(minutes).padStart(2, '0')\n}\n\n// Function to format a date with timezone offset\nexport function formatDateWithTimezone(date = new Date()): string {\n    const formattedDate = format(date, \"yyyy-MM-dd'T'HH:mm:ss\")\n    const timezoneOffset = getTimezoneOffset(date)\n    return `${formattedDate}${timezoneOffset}`\n}\n\nexport const calculateCreatedDaysAgo = (created?: string): number => {\n    if (!created) return 0\n    const today = Date.now()\n    const createdAt = convertStringDate(created).getTime()\n    const diff = new Date(today - createdAt)\n    return Math.floor(diff.getTime() / (1000 * 3600 * 24))\n}\n"],"names":["setMidnightTime","date","newDate","set","hours","minutes","seconds","milliseconds","timeZoneOffsetInHours","Date","getTimezoneOffset","stabilizeDateByTimeZone","add","Math","abs","sub","setZeroTime","convertStringDate","replace","DaysOfTheWeek","value","label","prepareFinishedAtForInsert","updated","formatDateWithTimezone","offset","absOffset","floor","String","padStart","formattedDate","format","timezoneOffset","calculateCreatedDaysAgo","created","today","now","createdAt","getTime","diff"],"mappings":"wEAEaA,MAAAA,EAAmBC,GAA8B,CACpDC,MAAAA,EAAUC,EAAIF,EAAM,CACtBG,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,aAAc,EAAA,CACjB,EAEKC,EAAwB,IAAIC,KAAK,EAAEC,kBAAsB,EAAA,GAWxDC,OARHH,EAAwB,EAClBI,EAAIV,EAAS,CACTE,MAAOS,KAAKC,IAAIN,CAAqB,CAAA,CACxC,EACDO,EAAIb,EAAS,CACTE,MAAOS,KAAKC,IAAIN,CAAqB,CAAA,CACxC,CAGf,EAEaQ,EAAef,GAAqB,CACvCC,MAAAA,EAAUC,EAAIF,EAAM,CACtBG,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,aAAc,CAAA,CACjB,EAEKC,EAAwB,IAAIC,KAAK,EAAEC,kBAAsB,EAAA,GAWxDC,OARHH,EAAwB,EAClBI,EAAIV,EAAS,CACTE,MAAOS,KAAKC,IAAIN,CAAqB,CAAA,CACxC,EACDO,EAAIb,EAAS,CACTE,MAAOS,KAAKC,IAAIN,CAAqB,CAAA,CACxC,CAGf,EAEaS,EAAqBhB,GAEvB,IAAIQ,KAAKR,EAAKiB,QAAQ,uBAAwB,EAAE,CAAC,EAG/CC,EAAgB,CACzB,CAAEC,MAAO,IAAKC,MAAO,QAAS,EAC9B,CAAED,MAAO,IAAKC,MAAO,SAAU,EAC/B,CAAED,MAAO,IAAKC,MAAO,WAAY,EACjC,CAAED,MAAO,IAAKC,MAAO,UAAW,EAChC,CAAED,MAAO,IAAKC,MAAO,QAAS,EAC9B,CAAED,MAAO,IAAKC,MAAO,UAAW,EAChC,CAAED,MAAO,IAAKC,MAAO,QAAS,CAAC,EAGtBC,EAA8BrB,GAAgC,CACjEsB,MAAAA,EAAUpB,EAAIF,EAAM,CAAEG,MAAO,GAAIC,QAAS,GAAIC,QAAS,GAAIC,aAAc,EAAA,CAAI,EACnF,OAAOiB,EAAuBD,CAAO,CACzC,EAGA,SAASb,EAAkBT,EAAoB,CACrCwB,MAAAA,EAASxB,EAAKS,kBAAkB,EAChCgB,EAAYb,KAAKC,IAAIW,CAAM,EAC3BrB,EAAQS,KAAKc,MAAMD,EAAY,EAAE,EACjCrB,EAAUqB,EAAY,GAC5B,OAAQD,GAAU,EAAI,IAAM,KAAOG,OAAOxB,CAAK,EAAEyB,SAAS,EAAG,GAAG,EAAI,IAAMD,OAAOvB,CAAO,EAAEwB,SAAS,EAAG,GAAG,CAC7G,CAGO,SAASL,EAAuBvB,EAAWQ,IAAAA,KAAgB,CACxDqB,MAAAA,EAAgBC,EAAO9B,EAAM,uBAAuB,EACpD+B,EAAiBtB,EAAkBT,CAAI,EACrC,MAAA,GAAE6B,CAAc,GAAEE,CAAe,EAC7C,CAEaC,MAAAA,EAA2BC,GAA6B,CAC7D,GAAA,CAACA,EAAgB,MAAA,GACfC,MAAAA,EAAQ1B,KAAK2B,IAAI,EACjBC,EAAYpB,EAAkBiB,CAAO,EAAEI,QAAQ,EAC/CC,EAAO,IAAI9B,KAAK0B,EAAQE,CAAS,EACvC,OAAOxB,KAAKc,MAAMY,EAAKD,QAAa,GAAA,IAAO,KAAO,GAAG,CACzD"}