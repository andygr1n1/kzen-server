{"version":3,"file":"AchToggleEdit-D8Nqb8YI.js","sources":["../../src/modules/achievements/hooks/useInvalidateAchs.ts","../../src/modules/achievements/services/mutation_updateAchDeletedAt.ts","../../src/modules/achievements/components-shared/ach-is-deleted/useUpdateAchDeletedAt.ts","../../src/modules/achievements/components-shared/ach-is-deleted/AchIsDeleted.tsx","../../src/modules/achievements/services/mutation_updateAchIsFavorite.ts","../../src/modules/achievements/components-shared/ach-is-favorite/useUpdateAchIsFavorite.ts","../../src/modules/achievements/components-shared/ach-is-favorite/AchIsFavorite.tsx","../../src/modules/achievements/components-shared/AchToggleEdit.tsx"],"sourcesContent":["import { useQueryClient } from '@tanstack/react-query'\nimport { achService } from '../services/achService'\n\nexport const useInvalidateAchs = () => {\n    const queryClient = useQueryClient()\n\n    const onSuccess = () => {\n        queryClient.invalidateQueries({\n            predicate: (query) => {\n                const queryKey = query.queryKey\n                return queryKey[0] === achService.instance\n            },\n        })\n    }\n\n    return { onSuccess }\n}\n","import { generateClient } from '@/api/client'\nimport { graphql } from '@/api/tada'\nimport { resolveError } from '@/helpers/tryCatchRequest'\nimport { achResponseFr } from './fragments/achResponseFr'\n\nexport const mutation_updateAchDeletedAt = async ({ id, deletedAt }: { id: string; deletedAt: string | null }) => {\n    const mutation = graphql(\n        `\n            mutation mutation_updateAchDeletedAt($id: uuid!, $deletedAt: timestamptz) {\n                update_achievements_by_pk(pk_columns: { id: $id }, _set: { deleted_at: $deletedAt }) {\n                    ...AchResponseFr\n                }\n            }\n        `,\n        [achResponseFr],\n    )\n\n    const client = await generateClient()\n\n    try {\n        return await client.request(mutation, { id, deletedAt })\n    } catch (e) {\n        return await resolveError(e)\n    }\n}\n","import { useMutation } from '@tanstack/react-query'\nimport { useInvalidateAchs } from '@/modules/achievements/hooks/useInvalidateAchs'\nimport { mutation_updateAchDeletedAt } from '../../services/mutation_updateAchDeletedAt'\n\nexport const useUpdateAchDeletedAt = () => {\n    const { onSuccess } = useInvalidateAchs()\n\n    const mutation = useMutation({\n        mutationFn: ({ id, deletedAt }: { id: string; deletedAt: null | string }) =>\n            mutation_updateAchDeletedAt({ id, deletedAt }),\n        onSuccess,\n    })\n\n    const updateDeletedAt = ({ id, deletedAt }: { id: string; deletedAt: null | string }) => {\n        mutation.mutate({ id, deletedAt })\n    }\n\n    return { updateDeletedAt }\n}\n","import { XTooltip } from '@/components-x/x-tooltip/XTooltip'\nimport { StyledButton } from '@/components/buttons/StyledButton'\nimport { IconDeleteTemp } from '@/assets/icons/IconDeleteTemp'\nimport { type ReactNode } from 'react'\nimport { useUpdateAchDeletedAt } from './useUpdateAchDeletedAt'\nimport { formatDateWithTimezone } from '@/helpers/date.helpers'\nimport { cn } from '@/helpers/cn'\n\nexport const AchIsDeleted: React.FC<{\n    id: string\n    deletedAt: boolean\n    label?: ReactNode\n    onClose?: () => void\n    context?: 'drawer'\n}> = ({ id, deletedAt, label, onClose, context }) => {\n    const { updateDeletedAt } = useUpdateAchDeletedAt()\n\n    return (\n        <>\n            <StyledButton\n                className={cn(context === 'drawer' && '!w-full !py-5')}\n                id='toggleMoveAchToBin'\n                size={'small'}\n                error={!!deletedAt}\n                variant={'text'}\n                onClick={() => {\n                    updateDeletedAt({ id, deletedAt: !!deletedAt ? null : formatDateWithTimezone() })\n                    onClose?.()\n                }}\n                startIcon={<IconDeleteTemp width={24} height={24} className='h-6 w-6 opacity-70 hover:opacity-100' />}\n            >\n                {label}\n            </StyledButton>\n            {!label && <XTooltip anchorSelect='#toggleMoveAchToBin'>{deletedAt ? 'Restore' : 'Move to bin'}</XTooltip>}\n        </>\n    )\n}\n","import { generateClient } from '@/api/client'\nimport { graphql } from '@/api/tada'\nimport { resolveError } from '@/helpers/tryCatchRequest'\nimport { achResponseFr } from './fragments/achResponseFr'\n\nexport const mutation_updateAchIsFavorite = async ({ id, isFavorite }: { id: string; isFavorite: boolean }) => {\n    const mutation = graphql(\n        `\n            mutation mutation_updateAchIsFavorite($id: uuid!, $isFavorite: Boolean!) {\n                update_achievements_by_pk(pk_columns: { id: $id }, _set: { is_favorite: $isFavorite }) {\n                    ...AchResponseFr\n                }\n            }\n        `,\n        [achResponseFr],\n    )\n\n    const client = await generateClient()\n\n    try {\n        return await client.request(mutation, { id, isFavorite })\n    } catch (e) {\n        return await resolveError(e)\n    }\n}\n","import { useMutation } from '@tanstack/react-query'\nimport { useInvalidateAchs } from '@/modules/achievements/hooks/useInvalidateAchs'\nimport { mutation_updateAchIsFavorite } from '../../services/mutation_updateAchIsFavorite'\n\nexport const useUpdateAchIsFavorite = () => {\n    const { onSuccess } = useInvalidateAchs()\n\n    const mutation = useMutation({\n        mutationFn: ({ id, isFavorite }: { id: string; isFavorite: boolean }) =>\n            mutation_updateAchIsFavorite({ id, isFavorite }),\n        onSuccess,\n    })\n\n    const toggleFavorite = ({ id, isFavorite }: { id: string; isFavorite: boolean }) => {\n        mutation.mutate({ id, isFavorite })\n    }\n\n    return { toggleFavorite }\n}\n","import { XTooltip } from '@/components-x/x-tooltip/XTooltip'\nimport { StyledButton } from '@/components/buttons/StyledButton'\nimport { IconHeart } from '@/assets/icons/IconHeart'\nimport { type ReactNode } from 'react'\nimport { useUpdateAchIsFavorite } from './useUpdateAchIsFavorite'\nimport { cn } from '@/helpers/cn'\n\nexport const AchIsFavorite: React.FC<{\n    id: string\n    isFavorite: boolean\n    label?: ReactNode\n    onClose?: () => void\n    context?: 'drawer'\n}> = ({ id, isFavorite, label, onClose, context }) => {\n    const { toggleFavorite } = useUpdateAchIsFavorite()\n\n    return (\n        <>\n            <StyledButton\n                className={cn(context === 'drawer' && '!w-full !py-5')}\n                id='toggleFavoriteAch'\n                error={!!isFavorite}\n                variant={isFavorite ? 'contained' : 'text'}\n                size={'small'}\n                onClick={() => {\n                    toggleFavorite({ id, isFavorite: !isFavorite })\n                    onClose?.()\n                }}\n                startIcon={<IconHeart className='mb-0.5 h-6 w-6 opacity-70 hover:opacity-100' />}\n            >\n                {label}\n            </StyledButton>\n            {!label && <XTooltip anchorSelect='#toggleFavoriteAch'>{isFavorite ? 'Unfavorite' : 'Favorite'}</XTooltip>}\n        </>\n    )\n}\n","import { XTooltip } from '@/components-x/x-tooltip/XTooltip'\nimport { StyledButton } from '@/components/buttons/StyledButton'\nimport { IconEdit } from '@/assets/icons/IconEdit'\nimport { type ReactNode } from 'react'\nimport { useAchEditorDialog$ } from '../components/ach-editor-dialog/mst/provider'\nimport { cn } from '@/helpers/cn'\nimport { observer } from 'mobx-react-lite'\n\nexport const AchToggleEdit: React.FC<{\n    label?: ReactNode\n    id: string\n    onClose?: () => void\n    context?: 'drawer' | 'menu'\n}> = observer(({ label, id, onClose, context }) => {\n    const { edit_id, readonly, onOpenEditMode, onOpenViewMode } = useAchEditorDialog$()\n\n    return (\n        <>\n            <StyledButton\n                className={cn(context === 'drawer' && '!w-full !py-5 !h-0')}\n                id='editAch'\n                variant={edit_id && !readonly ? 'contained' : 'text'}\n                size={'custom'}\n                startIcon={<IconEdit className='h-6 w-6 opacity-70 hover:opacity-100' />}\n                onClick={() => {\n                    if (context === 'menu') {\n                        onOpenEditMode({ edit_id: id })\n                    } else {\n                        readonly ? onOpenEditMode({ edit_id: id }) : onOpenViewMode({ edit_id: id })\n                    }\n                    onClose?.()\n                }}\n            >\n                {label}\n            </StyledButton>\n            {!label && <XTooltip anchorSelect='#editAch'>{edit_id ? 'Cancel' : 'Edit'}</XTooltip>}\n        </>\n    )\n})\n"],"names":["useInvalidateAchs","queryClient","useQueryClient","onSuccess","invalidateQueries","predicate","query","queryKey","achService","instance","mutation_updateAchDeletedAt","id","deletedAt","mutation","graphql","achResponseFr","client","generateClient","request","e","resolveError","useUpdateAchDeletedAt","useMutation","mutationFn","updateDeletedAt","mutate","AchIsDeleted","label","onClose","context","jsxs","Fragment","jsx","StyledButton","cn","formatDateWithTimezone","IconDeleteTemp","XTooltip","mutation_updateAchIsFavorite","isFavorite","useUpdateAchIsFavorite","toggleFavorite","AchIsFavorite","IconHeart","AchToggleEdit","observer","edit_id","readonly","onOpenEditMode","onOpenViewMode","useAchEditorDialog$","IconEdit"],"mappings":"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"}