{"version":3,"file":"StoryMessageMobile-URDJJmaf.js","sources":["../../src/modules/stories/components/story-maker/components/story-message/story-message-mobile/components/StoryMessageMobileMenu.tsx","../../src/modules/stories/components/story-maker/components/story-message/story-message-mobile/StoryMessageMobile.tsx"],"sourcesContent":["import { IconDeleteForever, IconEdit } from '@/assets/icons'\nimport { StyledButton } from '@/components/buttons/StyledButton'\nimport type { IStoryMessage } from '@/modules/stories/services/types'\nimport { observer } from 'mobx-react-lite'\nimport { useStoryMaker$ } from '../../../../mst/provider'\nimport { useDeleteStoryMessage } from '../../../../service/useDeleteStoryMessage'\nimport { XMobileMenu } from '@/components-x/x-mobil-menu/XMobileMenu'\n\nexport const StoryMessageMobileMenu: React.FC<{\n    message: IStoryMessage\n    openDrawer: boolean\n    onClose: () => void\n}> = observer(({ openDrawer, onClose, message }) => {\n    const { onChangeField, editSelectedMessageId } = useStoryMaker$()\n    const { deleteStoryMessage } = useDeleteStoryMessage()\n    const isSelected = message.id === editSelectedMessageId\n\n    return (\n        <XMobileMenu title={null} onClose={onClose} open={openDrawer} height={'230px'}>\n            <div className='flex flex-col h-[100px] gap-4'>\n                <StyledButton\n                    className='!w-full !py-5 !h-0'\n                    onClick={() => {\n                        onChangeField('editSelectedMessageId', isSelected ? undefined : message.id)\n                        onClose()\n                    }}\n                    variant='text'\n                    size='small'\n                    startIcon={<IconEdit width={24} height={24} />}\n                >\n                    <span className='flex w-full justify-start capitalize'>{isSelected ? 'Save' : 'Edit'}</span>\n                </StyledButton>\n                <StyledButton\n                    className='!w-full !py-5 !h-0'\n                    onClick={() => {\n                        deleteStoryMessage({ id: message.id })\n                        onClose()\n                    }}\n                    variant='text'\n                    size='small'\n                    startIcon={<IconDeleteForever width={24} height={24} />}\n                >\n                    <span className='flex w-full justify-start capitalize'>Delete</span>\n                </StyledButton>\n            </div>\n        </XMobileMenu>\n    )\n})\n","import { XTiptap } from '@/components-x/x-tiptap/XTiptap'\nimport type { IStoryMessage } from '@/modules/stories/services/types'\nimport { observer } from 'mobx-react-lite'\nimport { useUuidFromPath } from '@/hooks/useUuidFromPath'\nimport { cast } from '@/helpers'\nimport { useQueryClient } from '@tanstack/react-query'\nimport { extractTextFromHtml } from '@/helpers/extractTextFromHtml'\nimport { notify } from '@/helpers/processMessage'\nimport { format } from 'date-fns'\nimport { formatDateWithTimezone } from '@/helpers/date.helpers'\nimport { useState } from 'react'\nimport { useStoryMaker$ } from '../../../mst/provider'\nimport { useSaveStoryMessage } from '../../../service/useSaveStoryMessage'\nimport { storyMakerService } from '../../../service/storyMakerService'\nimport { StoryMessageMobileMenu } from './components/StoryMessageMobileMenu'\nimport { StyledButton } from '@/components/buttons/StyledButton'\nimport { IconThreeDots } from '@/assets/icons/IconThreeDots'\n\nconst StoryMessageMobile: React.FC<{ message: IStoryMessage }> = observer(({ message }) => {\n    const queryClient = useQueryClient()\n    const { onChangeField, editSelectedMessageId } = useStoryMaker$()\n    const { updateStoryMessage } = useSaveStoryMessage()\n    const { id } = useUuidFromPath()\n    const [openDrawer, setOpenDrawer] = useState(false)\n\n    if (!message.description) return null\n\n    return (\n        <>\n            <div\n                onContextMenu={(e) => e.preventDefault()}\n                className='relative group px-2 py-4 duration-300 border-b-solid border-transparent hover:border-blue-500/10'\n            >\n                <div className='text-xs opacity-0 duration-300 group-hover:opacity-80 top-0 absolute  font-semibold font-kzen cursor-default text-cText'>\n                    {format(formatDateWithTimezone(new Date(message.updated_at)), 'dd MMMM yyyy HH:mm')}\n                    {message.updated_by_user?.name && ` by ${message.updated_by_user?.name}`}\n                </div>\n                <span className='absolute top-[-8px] right-0 opacity-0 group-hover:opacity-80 duration-300'>\n                    <StyledButton\n                        onClick={() => setOpenDrawer(true)}\n                        variant='text'\n                        size='small'\n                        startIcon={<IconThreeDots className='h-4 w-4' />}\n                    />\n                </span>\n                <XTiptap\n                    showSaveButtonTooltip={false}\n                    onSave={({ html }) => {\n                        if (!extractTextFromHtml(html).trim().length) {\n                            notify('Type something')\n                            return\n                        }\n                        updateStoryMessage({\n                            description: html,\n                            id: cast(message.id),\n                            onSuccess: () => {\n                                onChangeField('editSelectedMessageId', undefined)\n                                queryClient.invalidateQueries({\n                                    queryKey: storyMakerService.useFetchStoryMessages(id),\n                                })\n                            },\n                        })\n                    }}\n                    readonly={message.id !== editSelectedMessageId}\n                    content={message.description}\n                    customToolbar={message.id === editSelectedMessageId}\n                />\n            </div>\n            <StoryMessageMobileMenu message={message} openDrawer={openDrawer} onClose={() => setOpenDrawer(false)} />\n        </>\n    )\n})\n\nexport default StoryMessageMobile\n"],"names":["StoryMessageMobileMenu","observer","openDrawer","onClose","message","onChangeField","editSelectedMessageId","useStoryMaker$","deleteStoryMessage","useDeleteStoryMessage","isSelected","id","jsx","XMobileMenu","jsxs","StyledButton","undefined","IconEdit","IconDeleteForever","StoryMessageMobile","queryClient","useQueryClient","updateStoryMessage","useSaveStoryMessage","useUuidFromPath","setOpenDrawer","useState","description","Fragment","e","preventDefault","format","formatDateWithTimezone","Date","updated_at","updated_by_user","name","IconThreeDots","XTiptap","html","extractTextFromHtml","trim","length","notify","cast","onSuccess","invalidateQueries","queryKey","storyMakerService","useFetchStoryMessages"],"mappings":"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"}