{"version":3,"file":"ProfileNewPasswordForm-X5VK1dHe.js","sources":["../../src/modules/profile/components/profile-new-password/components/ProfilePasswordInput.tsx","../../src/modules/profile/components/profile-new-password/components/ProfileNewPasswordInput.tsx","../../src/modules/profile/components/profile-new-password/components/ProfileRepeatNewPasswordInput.tsx","../../src/modules/profile/components/profile-new-password/components/ProfileNewPasswordForm.tsx"],"sourcesContent":["import { XInput } from '@/components-x/x-input/XInput'\nimport { useFormikContext } from 'formik'\nimport { type IUserProfilePasswordSchema } from '@/modules/profile/services'\nimport { FormLabel } from '@/components/form/FormLabel'\n\nexport const ProfilePasswordInput = () => {\n    const formikContext = useFormikContext<IUserProfilePasswordSchema>()\n\n    return (\n        <div>\n            <FormLabel title='Password' />\n            <XInput\n                autoComplete='off'\n                placeholder='****'\n                type={'password'}\n                name={'password'}\n                onChange={formikContext.handleChange}\n                value={formikContext.values.password}\n                error={formikContext.touched.password && Boolean(formikContext.errors.password)}\n                errorMessage={formikContext.errors.password}\n            />\n        </div>\n    )\n}\n","import { XInput } from '@/components-x/x-input/XInput'\nimport { useFormikContext } from 'formik'\nimport { type IUserProfilePasswordSchema } from '@/modules/profile/services'\nimport { FormLabel } from '@/components/form/FormLabel'\n\nexport const ProfileNewPasswordInput = () => {\n    const formikContext = useFormikContext<IUserProfilePasswordSchema>()\n\n    return (\n        <div>\n            <FormLabel title='New password' />\n            <XInput\n                autoComplete='new-password'\n                placeholder='****'\n                type='password'\n                name='newPassword'\n                onChange={formikContext.handleChange}\n                value={formikContext.values.newPassword}\n                error={formikContext.touched.newPassword && Boolean(formikContext.errors.newPassword)}\n                errorMessage={formikContext.errors.newPassword}\n            />\n        </div>\n    )\n}\n","import { XInput } from '@/components-x/x-input/XInput'\nimport { useFormikContext } from 'formik'\nimport { type IUserProfilePasswordSchema } from '@/modules/profile/services'\nimport { FormLabel } from '@/components/form/FormLabel'\n\nexport const ProfileRepeatNewPasswordInput = () => {\n    const formikContext = useFormikContext<IUserProfilePasswordSchema>()\n\n    return (\n        <div>\n            <FormLabel title='Repeat new password' />\n            <XInput\n                placeholder='****'\n                type={'password'}\n                autoComplete='off'\n                name={'repeatNewPassword'}\n                onChange={formikContext.handleChange}\n                value={formikContext.values.repeatNewPassword}\n                error={formikContext.touched.repeatNewPassword && Boolean(formikContext.errors.repeatNewPassword)}\n                errorMessage={formikContext.errors.repeatNewPassword}\n            />\n        </div>\n    )\n}\n","import { Form } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport { ProfileEmailInput } from '../../profile-details/components/ProfileEmailInput'\nimport { ProfilePasswordInput } from './ProfilePasswordInput'\nimport { ProfileNewPasswordInput } from './ProfileNewPasswordInput'\nimport { ProfileRepeatNewPasswordInput } from './ProfileRepeatNewPasswordInput'\nimport { StyledButton } from '@/components/buttons/StyledButton'\n\nconst ProfileNewPasswordForm: React.FC = observer(() => {\n    return (\n        <Form className='flex flex-col gap-5'>\n            {/* accessibility */}\n            <input type='text' style={{ display: 'none' }} autoComplete='off' name='accessibility' />\n            <ProfileEmailInput />\n            <ProfilePasswordInput />\n            <ProfileNewPasswordInput />\n            <ProfileRepeatNewPasswordInput />\n            <div className='flex justify-end w-full mt-5'>\n                <StyledButton type='submit'>Save</StyledButton>\n            </div>\n        </Form>\n    )\n})\n\nexport default ProfileNewPasswordForm\n"],"names":["ProfilePasswordInput","formikContext","useFormikContext","jsx","FormLabel","XInput","handleChange","values","password","touched","Boolean","errors","ProfileNewPasswordInput","newPassword","ProfileRepeatNewPasswordInput","repeatNewPassword","ProfileNewPasswordForm","observer","jsxs","Form","display","ProfileEmailInput","StyledButton"],"mappings":"smBAKO,MAAMA,EAAuBA,IAAM,CACtC,MAAMC,EAAgBC,EAA6C,EAEnE,cACK,MACG,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAU,MAAM,UAAU,CAAA,EAC1BD,EAAAA,IAAAE,EAAA,CACG,aAAa,MACb,YAAY,OACZ,KAAM,WACN,KAAM,WACN,SAAUJ,EAAcK,aACxB,MAAOL,EAAcM,OAAOC,SAC5B,MAAOP,EAAcQ,QAAQD,UAAYE,EAAQT,EAAcU,OAAOH,SACtE,aAAcP,EAAcU,OAAOH,QAAS,CAAA,CAAA,EAEpD,CAER,EClBaI,EAA0BA,IAAM,CACzC,MAAMX,EAAgBC,EAA6C,EAEnE,cACK,MACG,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAU,MAAM,cAAc,CAAA,EAC9BD,EAAAA,IAAAE,EAAA,CACG,aAAa,eACb,YAAY,OACZ,KAAK,WACL,KAAK,cACL,SAAUJ,EAAcK,aACxB,MAAOL,EAAcM,OAAOM,YAC5B,MAAOZ,EAAcQ,QAAQI,aAAeH,EAAQT,EAAcU,OAAOE,YACzE,aAAcZ,EAAcU,OAAOE,WAAY,CAAA,CAAA,EAEvD,CAER,EClBaC,EAAgCA,IAAM,CAC/C,MAAMb,EAAgBC,EAA6C,EAEnE,cACK,MACG,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAU,MAAM,qBAAqB,CAAA,EACrCD,EAAAA,IAAAE,EAAA,CACG,YAAY,OACZ,KAAM,WACN,aAAa,MACb,KAAM,oBACN,SAAUJ,EAAcK,aACxB,MAAOL,EAAcM,OAAOQ,kBAC5B,MAAOd,EAAcQ,QAAQM,mBAAqBL,EAAQT,EAAcU,OAAOI,kBAC/E,aAAcd,EAAcU,OAAOI,iBAAkB,CAAA,CAAA,EAE7D,CAER,ECfMC,EAAmCC,EAAS,IAE1CC,EAAA,KAACC,EAAK,CAAA,UAAU,sBAEZ,SAAA,CAAChB,EAAAA,IAAA,QAAA,CAAM,KAAK,OAAO,MAAO,CAAEiB,QAAS,MAAU,EAAA,aAAa,MAAM,KAAK,eAAe,CAAA,QACrFC,EAAiB,EAAA,QACjBrB,EAAoB,EAAA,QACpBY,EAAuB,EAAA,QACvBE,EAA6B,EAAA,EAC9BX,EAAAA,IAAC,OAAI,UAAU,+BACX,eAACmB,EAAa,CAAA,KAAK,SAAS,SAAA,MAAI,CAAA,CACpC,CAAA,CAAA,EACJ,CAEP"}