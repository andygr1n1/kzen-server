{"version":3,"file":"AchView-DIin4I8N.js","sources":["../../src/modules/achievements/components/achs-by-filter/ach-list/components/ach/shared-components/ach-status/components/AchIsArchivedInfo.tsx","../../src/modules/achievements/components/achs-by-filter/ach-list/components/ach/shared-components/ach-status/components/AchIsDeletedInfo.tsx","../../src/modules/achievements/components/achs-by-filter/ach-list/components/ach/shared-components/ach-status/components/AchIsFavoriteInfo.tsx","../../src/modules/achievements/components/achs-by-filter/ach-list/components/ach/shared-components/ach-status/AchStatus.tsx","../../src/modules/achievements/services/mutation_updateAchIsArchived.ts","../../src/modules/achievements/components-shared/ach-is-archived/useUpdateAchIsArchived.ts","../../src/modules/achievements/components-shared/ach-is-archived/AchIsArchived.tsx","../../src/modules/achievements/components-shared/AchView.tsx"],"sourcesContent":["import { IconArchive } from '@/assets/icons/IconArchive'\nimport { cn } from '@/helpers/cn'\nimport type { IAch } from '@/modules/achievements/services/types'\n\nexport const AchIsArchivedInfo: React.FC<{ ach: IAch; isMobile?: boolean }> = ({ ach, isMobile }) => {\n    if (!ach.archived) return null\n\n    return <IconArchive className={cn('text-violet-500', isMobile ? 'w-9 h-9' : 'w-6 h-6')} />\n}\n","import { IconDeleteTemp } from '@/assets/icons'\nimport { cn } from '@/helpers/cn'\nimport type { IAch } from '@/modules/achievements/services/types'\n\nexport const AchIsDeletedInfo: React.FC<{ ach: IAch; isMobile?: boolean }> = ({ ach, isMobile }) => {\n    if (!ach.deleted_at) return null\n\n    return <IconDeleteTemp className={cn('text-gray-500', isMobile ? 'w-9 h-9 mt-1' : 'w-6 h-6')} />\n}\n","import { IconFavorite } from '@/assets/icons'\nimport { cn } from '@/helpers/cn'\nimport type { IAch } from '@/modules/achievements/services/types'\n\nexport const AchIsFavoriteInfo: React.FC<{ ach: IAch; isMobile?: boolean }> = ({ ach, isMobile }) => {\n    if (!ach.is_favorite) return null\n\n    return <IconFavorite className={cn('text-red-500', isMobile ? 'w-9 h-9' : 'w-6 h-6')} />\n}\n","import type { IAch } from '@/modules/achievements/services/types'\nimport { AchIsArchivedInfo } from './components/AchIsArchivedInfo'\nimport { AchIsDeletedInfo } from './components/AchIsDeletedInfo'\nimport { AchIsFavoriteInfo } from './components/AchIsFavoriteInfo'\nimport { cn } from '@/helpers/cn'\n\nexport const AchStatus: React.FC<{ ach: IAch; isMobile?: boolean }> = ({ ach, isMobile }) => {\n    return (\n        <div className={cn('absolute flex', isMobile ? 'bottom-4 right-3 gap-3' : 'bottom-1 right-2 gap-3')}>\n            <AchIsDeletedInfo ach={ach} isMobile={isMobile} />\n            <AchIsArchivedInfo ach={ach} isMobile={isMobile} />\n            <AchIsFavoriteInfo ach={ach} isMobile={isMobile} />\n        </div>\n    )\n}\n","import { generateClient } from '@/api/client'\nimport { graphql } from '@/api/tada'\nimport { resolveError } from '@/helpers/tryCatchRequest'\nimport { achResponseFr } from './fragments/achResponseFr'\n\nexport const mutation_updateAchIsArchived = async ({ id, isArchived }: { id: string; isArchived: boolean }) => {\n    const mutation = graphql(\n        `\n            mutation update_ach_archived($id: uuid!, $archived: Boolean!) {\n                update_achievements_by_pk(pk_columns: { id: $id }, _set: { archived: $archived }) {\n                    ...AchResponseFr\n                }\n            }\n        `,\n        [achResponseFr],\n    )\n\n    const client = await generateClient()\n\n    try {\n        return await client.request(mutation, { id, archived: isArchived })\n    } catch (e) {\n        return await resolveError(e)\n    }\n}\n","import { useMutation } from '@tanstack/react-query'\nimport { mutation_updateAchIsArchived } from '../../services/mutation_updateAchIsArchived'\nimport { useInvalidateAchs } from '../../hooks/useInvalidateAchs'\n\nexport const useUpdateAchIsArchived = () => {\n    const { onSuccess } = useInvalidateAchs()\n\n    const mutation = useMutation({\n        mutationFn: ({ id, isArchived }: { id: string; isArchived: boolean }) =>\n            mutation_updateAchIsArchived({ id, isArchived }),\n        onSuccess,\n    })\n\n    const toggleArchived = ({ id, isArchived }: { id: string; isArchived: boolean }) => {\n        mutation.mutate({ id, isArchived })\n    }\n\n    return { toggleArchived }\n}\n","import { XTooltip } from '@/components-x/x-tooltip/XTooltip'\nimport { StyledButton } from '@/components/buttons/StyledButton'\nimport { type ReactNode } from 'react'\nimport { IconArchive } from '@/assets/icons/IconArchive'\nimport { cn } from '@/helpers/cn'\nimport { useUpdateAchIsArchived } from './useUpdateAchIsArchived'\n\nexport const AchIsArchived: React.FC<{\n    id: string\n    isArchived: boolean\n    label?: ReactNode\n    onClose: () => void\n    context?: 'drawer'\n}> = ({ id, isArchived, label, onClose, context }) => {\n    const { toggleArchived } = useUpdateAchIsArchived()\n\n    return (\n        <>\n            <StyledButton\n                id='toggleArchiveStory'\n                variant={isArchived ? 'contained' : 'text'}\n                size={'small'}\n                onClick={() => {\n                    toggleArchived({ id, isArchived: !isArchived })\n                    onClose()\n                }}\n                className={cn(isArchived && '!bg-violet-600', context === 'drawer' && '!w-full !py-5')}\n                startIcon={<IconArchive className='mb-0.5 h-6 w-6 opacity-70 hover:opacity-100' />}\n            >\n                {label}\n            </StyledButton>\n            {!label && <XTooltip anchorSelect='#toggleArchiveStory'>{isArchived ? 'Unarchive' : 'Archive'}</XTooltip>}\n        </>\n    )\n}\n","import { StyledButton } from '@/components/buttons/StyledButton'\nimport { useAchEditorDialog$ } from '../components/ach-editor-dialog/mst/provider'\nimport { cn } from '@/helpers/cn'\nimport { IconEye } from '@/assets/icons'\n\nexport const AchView: React.FC<{ id: string; onClose?: () => void; context?: 'drawer' }> = ({\n    id,\n    onClose,\n    context,\n}) => {\n    const { edit_id, onOpenViewMode } = useAchEditorDialog$()\n\n    return (\n        <>\n            <StyledButton\n                className={cn(context === 'drawer' && '!w-full !py-5 !h-0')}\n                id='editAch'\n                variant={edit_id ? 'contained' : 'text'}\n                size={'custom'}\n                startIcon={<IconEye className='h-6 w-6 min-h-6 min-w-6 opacity-70 hover:opacity-100' />}\n                onClick={() => {\n                    onOpenViewMode({ edit_id: id })\n                    onClose?.()\n                }}\n            >\n                <span className='capitalize w-full justify-start flex'>View</span>\n            </StyledButton>\n        </>\n    )\n}\n"],"names":["AchIsArchivedInfo","ach","isMobile","archived","jsx","IconArchive","cn","AchIsDeletedInfo","deleted_at","IconDeleteTemp","AchIsFavoriteInfo","is_favorite","IconFavorite","AchStatus","jsxs","mutation_updateAchIsArchived","id","isArchived","mutation","graphql","achResponseFr","client","generateClient","request","e","resolveError","useUpdateAchIsArchived","onSuccess","useInvalidateAchs","useMutation","mutationFn","toggleArchived","mutate","AchIsArchived","label","onClose","context","Fragment","StyledButton","XTooltip","AchView","edit_id","onOpenViewMode","useAchEditorDialog$","IconEye"],"mappings":"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"}