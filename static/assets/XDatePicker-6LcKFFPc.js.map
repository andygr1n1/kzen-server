{"version":3,"file":"XDatePicker-6LcKFFPc.js","sources":["../../src/assets/icons/IconEraser.tsx","../../src/assets/icons/IconChevronLeft.tsx","../../src/assets/icons/IconChevronRight.tsx","../../src/assets/icons/IconCalendar.tsx","../../src/components-x/x-date-picker/XCalendar.tsx","../../src/components/form/FormFooter.tsx","../../src/components-x/x-date-picker/XDatePicker.tsx"],"sourcesContent":["import React from 'react'\nimport type { SVGProps } from 'react'\n\nexport function IconEraser(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg xmlns='http://www.w3.org/2000/svg' width='1rem' height='1rem' viewBox='0 0 256 256' {...props}>\n            <path\n                fill='currentColor'\n                d='M225 80.4L183.6 39a24 24 0 0 0-33.94 0L31 157.66a24 24 0 0 0 0 33.94l30.06 30.06a8 8 0 0 0 5.68 2.34H216a8 8 0 0 0 0-16h-84.7l93.7-93.66a24 24 0 0 0 0-33.94M213.67 103L160 156.69L107.31 104L161 50.34a8 8 0 0 1 11.32 0l41.38 41.38a8 8 0 0 1 0 11.31Z'\n            ></path>\n        </svg>\n    )\n}\n","import type { SVGProps } from 'react'\n\nexport function IconChevronLeft(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg xmlns='http://www.w3.org/2000/svg' width='1rem' height='1rem' viewBox='0 0 24 24' {...props}>\n            <path fill='currentColor' d='m14 18l-6-6l6-6l1.4 1.4l-4.6 4.6l4.6 4.6z'></path>\n        </svg>\n    )\n}\n","import type { SVGProps } from 'react'\n\nexport function IconChevronRight(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg xmlns='http://www.w3.org/2000/svg' width='1rem' height='1rem' viewBox='0 0 24 24' {...props}>\n            <path fill='currentColor' d='M12.6 12L8 7.4L9.4 6l6 6l-6 6L8 16.6z'></path>\n        </svg>\n    )\n}\n","import type { SVGProps } from 'react'\n\nexport function IconCalendar(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg xmlns='http://www.w3.org/2000/svg' width='1rem' height='1rem' viewBox='0 0 24 24' {...props}>\n            <path\n                fill='none'\n                stroke='currentColor'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth={2}\n                d='M4 7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm12-4v4M8 3v4m-4 4h16M7 14h.013m2.997 0h.005m2.995 0h.005m3 0h.005m-3.005 3h.005m-6.01 0h.005m2.995 0h.005'\n            ></path>\n        </svg>\n    )\n}\n","import { DayPicker, useNavigation } from 'react-day-picker'\nimport type { XDatePickerProps } from './XDatePicker'\nimport { type Dispatch, type SetStateAction, useEffect } from 'react'\nimport { StyledButton } from '@/components/buttons/StyledButton'\nimport { XTooltip } from '../x-tooltip/XTooltip'\nimport clsx from 'clsx'\nimport styles from './XCalendar.module.scss'\nimport { IconChevronLeft, IconChevronRight, IconEraser } from '@/assets/icons'\n// possible to redesign dropdown with  useNavigation  from 'react-day-picker'\n\ntype IXCalendarProps = {\n    bufferSelect: Date | undefined\n    setBufferSelect: Dispatch<SetStateAction<Date | undefined>>\n} & XDatePickerProps\nexport const XCalendar: React.FC<IXCalendarProps> = (props) => {\n    function onSelect(day: Date | undefined) {\n        props.setBufferSelect(day)\n    }\n\n    return (\n        <div>\n            <DayPicker\n                {...props}\n                classNames={{\n                    caption_label: 'mr-2',\n                    day: clsx('h-9 w-9 p-0 font-normal rounded-md', styles['x-calendar-day']),\n                    day_today: 'text-red-500',\n                }}\n                components={{\n                    IconLeft: () => <IconChevronLeft width={24} height={24} />,\n                    IconRight: () => <IconChevronRight width={24} height={24} />,\n                }}\n                onSelect={onSelect}\n                selected={props.bufferSelect}\n                footer={<DayPickerFooter {...props} />}\n            />\n        </div>\n    )\n}\n\nconst DayPickerFooter: React.FC<IXCalendarProps> = (props) => {\n    const { goToMonth } = useNavigation()\n    function onSelect(day: Date | undefined) {\n        props.setBufferSelect(day)\n    }\n\n    useEffect(() => {\n        if (props.selected) {\n            goToMonth(props.selected)\n            onSelect(props.selected)\n        }\n    }, [])\n\n    return (\n        <div className='flex items-center justify-start gap-2'>\n            <StyledButton\n                id='resetDate'\n                variant='text'\n                className='z-10'\n                onClick={() => onSelect(undefined)}\n                startIcon={\n                    <IconEraser\n                        width={24}\n                        height={24}\n                        className='cursor-pointer p-2 duration-300 hover:text-blue-600'\n                    />\n                }\n            />\n            <XTooltip anchorSelect='#resetDate'>Reset</XTooltip>\n\n            {props.showToday && (\n                <StyledButton\n                    id='showToday'\n                    variant='text'\n                    onClick={() => {\n                        onSelect(new Date(Date.now()))\n                        goToMonth(new Date(Date.now()))\n                    }}\n                >\n                    Today\n                </StyledButton>\n            )}\n            <XTooltip anchorSelect='#showToday'>Navigate to current date</XTooltip>\n        </div>\n    )\n}\n","import { type ReactNode } from 'react'\nimport { StyledButton } from '../buttons/StyledButton'\nimport { XTooltip } from '@/components-x/x-tooltip/XTooltip'\n\nexport const FormFooter: React.FC<{\n    disabled?: boolean\n    disabledTooltip?: string\n    okTitle?: ReactNode\n    cancelTitle?: ReactNode\n    onOk: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\n    onCancel: () => void\n    hideOkButton?: boolean\n}> = ({\n    onCancel,\n    onOk,\n    okTitle = 'Ok',\n    cancelTitle = '',\n    disabled = false,\n    disabledTooltip,\n    hideOkButton = false,\n}) => {\n    return (\n        <div className='mt-10 flex w-full items-center justify-center gap-6'>\n            <StyledButton error rounded onClick={onCancel} variant='outlined' size='extraLarge' className='!w-28'>\n                <div className='flex items-center justify-center gap-2'>\n                    {cancelTitle ? (\n                        cancelTitle\n                    ) : (\n                        <>\n                            <div>Return</div>\n                        </>\n                    )}\n                </div>\n            </StyledButton>\n            {hideOkButton ? null : (\n                <div className='relative'>\n                    <StyledButton\n                        rounded\n                        disabled={disabled}\n                        size='extraLarge'\n                        className='z-10 !min-w-[112px]'\n                        onClick={onOk}\n                    >\n                        {okTitle}\n                    </StyledButton>\n                    {disabled && disabledTooltip && (\n                        <div\n                            id='disabledTooltip'\n                            className='pointer-events-auto absolute left-0 top-0 z-20 h-full w-full rounded-lg bg-transparent\n                        '\n                        />\n                    )}\n                    {disabled && disabledTooltip && (\n                        <XTooltip anchorSelect='#disabledTooltip'>{disabledTooltip}</XTooltip>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}\n","import { format } from 'date-fns'\nimport { type ChangeEventHandler, useState } from 'react'\nimport { XCalendar } from './XCalendar'\nimport { XInput } from '../x-input/XInput'\nimport { XModal } from '../x-modal/XModal'\nimport { FormFooter } from '@/components/form/FormFooter'\nimport { type DayPickerSingleProps } from 'react-day-picker'\nimport { FormLabel } from '@/components/form/FormLabel'\nimport { IconCalendar } from '@/assets/icons'\n\nexport type XDatePickerProps = {\n    dateFormat?: string\n    className?: string\n    inputClassName?: string\n    inputDisabled?: boolean\n    onChange?: ChangeEventHandler<HTMLInputElement> | undefined\n    label?: string\n    placeholder?: string\n    onClear?: () => void\n    showToday?: boolean\n    readOnly?: boolean\n} & DayPickerSingleProps\n\nexport const XDatePicker: React.FC<XDatePickerProps> = ({\n    placeholder = '',\n    dateFormat,\n    inputClassName,\n    inputDisabled,\n    readOnly,\n    ...props\n}) => {\n    const [dateSelectorIsOpen, setDateSelectorIsOpen] = useState(false)\n    const closeDateSelector = () => {\n        setDateSelectorIsOpen(false)\n        document.body.click()\n    }\n    const openDateSelector = () => {\n        setDateSelectorIsOpen(true)\n    }\n\n    const [bufferSelect, setBufferSelect] = useState(props.selected)\n\n    const getValue = (options: { date?: Date; dateFormat?: string }) => {\n        const { date, dateFormat } = options\n        return date ? format(date, dateFormat || 'dd.MM.yyyy') : null\n    }\n\n    return (\n        <>\n            <div onClick={() => !readOnly && openDateSelector()}>\n                {props.label && <FormLabel title={props.label} />}\n                <XInput\n                    value={getValue({ date: props.selected, dateFormat }) || ''}\n                    disabled={inputDisabled}\n                    endIcon={<IconCalendar width={24} height={24} className='cursor-pointer' />}\n                    className={inputClassName}\n                    onChange={() => undefined}\n                    placeholder={placeholder}\n                    readOnly={readOnly}\n                    variant='select'\n                />\n            </div>\n\n            <XModal\n                title={'Select Date'}\n                // height='80vh'\n                open={dateSelectorIsOpen}\n                onCancel={closeDateSelector}\n            >\n                {dateSelectorIsOpen ? (\n                    <div className='animate-opacity-3 flex h-full min-h-[500px] flex-col py-5'>\n                        <div className='flex h-full flex-col items-center '>\n                            <XCalendar {...props} bufferSelect={bufferSelect} setBufferSelect={setBufferSelect} />\n                        </div>\n                        {/* Footer */}\n                        <FormFooter\n                            okTitle={'Save'}\n                            onOk={(e) => {\n                                props?.onSelect?.(bufferSelect, new Date(Date.now()), {}, e)\n                                closeDateSelector()\n                            }}\n                            onCancel={closeDateSelector}\n                        />\n                    </div>\n                ) : null}\n            </XModal>\n        </>\n    )\n}\n"],"names":["IconEraser","props","jsx","IconChevronLeft","IconChevronRight","IconCalendar","XCalendar","onSelect","day","setBufferSelect","DayPicker","caption_label","clsx","styles","day_today","IconLeft","IconRight","bufferSelect","DayPickerFooter","goToMonth","useNavigation","useEffect","selected","jsxs","StyledButton","undefined","XTooltip","showToday","Date","now","FormFooter","onCancel","onOk","okTitle","cancelTitle","disabled","disabledTooltip","hideOkButton","Fragment","XDatePicker","placeholder","dateFormat","inputClassName","inputDisabled","readOnly","dateSelectorIsOpen","setDateSelectorIsOpen","useState","closeDateSelector","document","body","click","openDateSelector","getValue","options","date","format","label","FormLabel","XInput","XModal","e"],"mappings":"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"}