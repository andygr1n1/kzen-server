{"version":3,"file":"useMatchMedia.hook-CVR6FWmx.js","sources":["../../src/assets/icons/IconGithub.tsx","../../src/hooks/useMatchMedia.hook.tsx"],"sourcesContent":["import type { SVGProps } from 'react'\n\nexport function IconGithub(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg xmlns='http://www.w3.org/2000/svg' width='1rem' height='1rem' viewBox='0 0 24 24' {...props}>\n            <g fill='none'>\n                <path d='M24 0v24H0V0zM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022m-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z'></path>\n                <path\n                    fill='currentColor'\n                    d='M7.024 2.31a9.08 9.08 0 0 1 2.125 1.046A11.432 11.432 0 0 1 12 3c.993 0 1.951.124 2.849.355a9.08 9.08 0 0 1 2.124-1.045c.697-.237 1.69-.621 2.28.032c.4.444.5 1.188.571 1.756c.08.634.099 1.46-.111 2.28C20.516 7.415 21 8.652 21 10c0 2.042-1.106 3.815-2.743 5.043a9.456 9.456 0 0 1-2.59 1.356c.214.49.333 1.032.333 1.601v3a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1v-.991c-.955.117-1.756.013-2.437-.276c-.712-.302-1.208-.77-1.581-1.218c-.354-.424-.74-1.38-1.298-1.566a1 1 0 0 1 .632-1.898c.666.222 1.1.702 1.397 1.088c.48.62.87 1.43 1.63 1.753c.313.133.772.22 1.49.122L8 17.98a3.986 3.986 0 0 1 .333-1.581a9.455 9.455 0 0 1-2.59-1.356C4.106 13.815 3 12.043 3 10c0-1.346.483-2.582 1.284-3.618c-.21-.82-.192-1.648-.112-2.283l.005-.038c.073-.582.158-1.267.566-1.719c.59-.653 1.584-.268 2.28-.031Z'\n                ></path>\n            </g>\n        </svg>\n    )\n}\n\nexport function IconGithubStar(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg xmlns='http://www.w3.org/2000/svg' width='1rem' height='1rem' viewBox='0 0 24 24' {...props}>\n            <path\n                fill='currentColor'\n                d='M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2'\n            ></path>\n        </svg>\n    )\n}","import { useState, useLayoutEffect } from 'react'\n\nenum MEDIA_QUERY_KEYS_ENUM {\n    IS_MOBILE = 'isMobile',\n    IS_TABLET = 'isTablet',\n    IS_DESKTOP = 'isDesktop',\n    IS_LARGE_DESKTOP = 'isLargeDesktop',\n}\n\nexport enum MEDIA_QUERY_VALUES_ENUM {\n    IS_MOBILE = '(max-width: 766px)',\n    IS_TABLET = '(min-width: 767px) and (max-width: 1023px)',\n    // IS_DESKTOP = '(min-width: 1024px) and (max-width: 1279px)',\n    IS_DESKTOP = '(min-width: 1024px)',\n    IS_LARGE_DESKTOP = '(min-width: 1280px)',\n}\n\nconst MediaQuery = {\n    isMobile: MEDIA_QUERY_VALUES_ENUM.IS_MOBILE,\n    isTablet: MEDIA_QUERY_VALUES_ENUM.IS_TABLET,\n    isDesktop: MEDIA_QUERY_VALUES_ENUM.IS_DESKTOP,\n    isLargeDesktop: MEDIA_QUERY_VALUES_ENUM.IS_LARGE_DESKTOP,\n}\n\n/**\n * const { isMobile } = useWindowMatchMedia(['isMobile'])\n *\n * const { isDesktop, isMobile, isTablet } = useWindowMatchMedia()\n *\n *\n */\nexport const useWindowMatchMedia = (media?: (keyof typeof MediaQuery)[]) => {\n    let queries: MEDIA_QUERY_VALUES_ENUM[] = []\n    const media_devices: (keyof typeof MediaQuery)[] = []\n\n    if (media) {\n        media.forEach((m) => {\n            switch (m) {\n                case MEDIA_QUERY_KEYS_ENUM.IS_MOBILE:\n                    queries.push(MEDIA_QUERY_VALUES_ENUM.IS_MOBILE)\n                    media_devices.push(m)\n                    return\n                case MEDIA_QUERY_KEYS_ENUM.IS_TABLET:\n                    queries.push(MEDIA_QUERY_VALUES_ENUM.IS_TABLET)\n                    media_devices.push(m)\n                    return\n                case MEDIA_QUERY_KEYS_ENUM.IS_DESKTOP:\n                    queries.push(MEDIA_QUERY_VALUES_ENUM.IS_DESKTOP)\n                    media_devices.push(m)\n                    return\n                case MEDIA_QUERY_KEYS_ENUM.IS_LARGE_DESKTOP:\n                    queries.push(MEDIA_QUERY_VALUES_ENUM.IS_LARGE_DESKTOP)\n                    media_devices.push(m)\n                    return\n            }\n        })\n    } else {\n        queries = [\n            MEDIA_QUERY_VALUES_ENUM.IS_MOBILE,\n            MEDIA_QUERY_VALUES_ENUM.IS_TABLET,\n            MEDIA_QUERY_VALUES_ENUM.IS_DESKTOP,\n            MEDIA_QUERY_VALUES_ENUM.IS_LARGE_DESKTOP,\n        ]\n    }\n\n    const mediaQueryLists = queries.map((query) => matchMedia(query))\n    const getValues = () => mediaQueryLists.map((mql) => mql.matches)\n\n    const [values, setValues] = useState(getValues)\n\n    useLayoutEffect(() => {\n        const handler = () => setValues(getValues)\n\n        mediaQueryLists.forEach((mq) => mq.addEventListener('change', handler))\n\n        return () => mediaQueryLists.forEach((mq) => mq.removeEventListener('change', handler))\n    })\n\n    const QueryObject = media_devices.reduce(\n        (acc, screen, index) => ({\n            ...acc,\n            [screen]: values[index],\n        }),\n        {} as typeof MediaQuery,\n    )\n\n    return QueryObject\n}\n"],"names":["IconGithub","props","jsx","jsxs","IconGithubStar","useWindowMatchMedia","media","queries","media_devices","forEach","m","MEDIA_QUERY_KEYS_ENUM","push","MEDIA_QUERY_VALUES_ENUM","mediaQueryLists","map","matchMedia","query","getValues","mql","matches","values","setValues","useState","useLayoutEffect","handler","mq","addEventListener","removeEventListener","reduce","acc","screen","index"],"mappings":"+EAEO,SAASA,EAAWC,EAAgC,CACvD,OACKC,EAAA,IAAA,MAAA,CAAI,MAAM,6BAA6B,MAAM,OAAO,OAAO,OAAO,QAAQ,YAAgBD,GAAAA,EACvF,SAACE,EAAAA,KAAA,IAAA,CAAE,KAAK,OACJ,SAAA,CAACD,EAAAA,IAAA,OAAA,CAAK,EAAE,iiBAAkiB,CAAA,EACziBA,EAAA,IAAA,OAAA,CACG,KAAK,eACL,EAAE,2wBACL,CAAA,CAAA,CAAA,CACL,CACJ,CAAA,CAER,CAEO,SAASE,EAAeH,EAAgC,CAC3D,aACK,MAAI,CAAA,MAAM,6BAA6B,MAAM,OAAO,OAAO,OAAO,QAAQ,YAAgBA,GAAAA,EACvF,SAACC,EAAA,IAAA,OAAA,CACG,KAAK,eACL,EAAE,gjBACL,CAAA,EACL,CAER,CCMaG,MAAAA,EAAuBC,GAAwC,CACxE,IAAIC,EAAqC,CAAE,EAC3C,MAAMC,EAA6C,CAAE,EAEjDF,EACAA,EAAMG,QAAeC,GAAA,CACjB,OAAQA,EAAC,CACL,IAAKC,WACDJ,EAAQK,KAAKC,oBAAiC,EAC9CL,EAAcI,KAAKF,CAAC,EACpB,OACJ,IAAKC,WACDJ,EAAQK,KAAKC,4CAAiC,EAC9CL,EAAcI,KAAKF,CAAC,EACpB,OACJ,IAAKC,YACDJ,EAAQK,KAAKC,qBAAkC,EAC/CL,EAAcI,KAAKF,CAAC,EACpB,OACJ,IAAKC,iBACDJ,EAAQK,KAAKC,qBAAwC,EACrDL,EAAcI,KAAKF,CAAC,EACpB,MAAA,CACR,CACH,EAEDH,EAAU,CACNM,qBACAA,6CACAA,sBACAA,qBAAwC,EAIhD,MAAMC,EAAkBP,EAAQQ,IAAeC,GAAAA,WAAWC,CAAK,CAAC,EAC1DC,EAAYA,IAAMJ,EAAgBC,IAAKI,GAAQA,EAAIC,OAAO,EAE1D,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAASL,CAAS,EAE9CM,OAAAA,EAAAA,gBAAgB,IAAM,CACZC,MAAAA,EAAUA,IAAMH,EAAUJ,CAAS,EAEzCJ,OAAAA,EAAgBL,QAAgBiB,GAAAA,EAAGC,iBAAiB,SAAUF,CAAO,CAAC,EAE/D,IAAMX,EAAgBL,QAASiB,GAAOA,EAAGE,oBAAoB,SAAUH,CAAO,CAAC,CAAA,CACzF,EAEmBjB,EAAcqB,OAC9B,CAACC,EAAKC,EAAQC,KAAW,CACrB,GAAGF,EACH,CAACC,CAAM,EAAGV,EAAOW,CAAK,CAC1B,GACA,CAAA,CACJ,CAGJ"}