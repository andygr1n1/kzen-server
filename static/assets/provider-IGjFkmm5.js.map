{"version":3,"file":"provider-IGjFkmm5.js","sources":["../../src/modules/notes/components/note-editor-dialog/stores/note-editor-store/types.ts","../../src/modules/notes/shared-services/keys.ts","../../src/modules/notes/components/note-editor-dialog/stores/note-editor-store/useNoteEditor.store.ts","../../src/modules/notes/components/note-editor-dialog/mst/stores/useNoteTag.store.ts","../../src/modules/notes/components/note-editor-dialog/mst/provider.tsx"],"sourcesContent":["import { z } from 'zod'\n\n/*  */\n/*  */\n/*  */\nexport const editorModeSchema = z.enum(['edit', 'new', 'view'])\n\nexport const editorMode = editorModeSchema.Values\n\nexport type INoteEditorMode = z.infer<typeof editorModeSchema>\n\n/*  */\n/*  */\n/*  */\n\nconst noteEditorStoreSchema = z.object({\n    open: z.boolean(),\n    editorMode: editorModeSchema.nullable(),\n    id: z.string().nullable(),\n    metadata: z\n        .object({\n            parentGoalEditorMode: editorModeSchema.nullable().optional(),\n            viewModeRedirect: editorModeSchema.nullable().optional(),\n            preventRerender: z.boolean().default(false).optional(),\n        })\n        .optional(),\n})\n\nexport type INoteEditorStoreSchema = z.infer<typeof noteEditorStoreSchema>\n","import { type INoteStatus } from './types'\nexport const notesKeys = {\n    /*stores*/\n    useNotesFilters$: () => ['useNotesFilters$'],\n    useNoteEditor$: () => ['useNoteEditor$'],\n    useNoteTag$: () => ['useNoteTag$'],\n\n    /*queries*/\n    useFetchNotes: (\n        limit: number,\n        queryFilter: INoteStatus,\n        serverSearchInput: string,\n        userId: string,\n        label?: string,\n    ) => ['notesKeys', 'useFetchNotes', limit, queryFilter, serverSearchInput, userId, label],\n    useFetchNote: (filter: { id: string | null }) => ['notesKeys', 'useFetchNote', filter.id],\n    // fetchOrgs: (filter: IOrgFilter) => ['fetchOrgs', filter ? JSON.stringify(filter) : ''],\n}\n","import { useQuery, useQueryClient } from '@tanstack/react-query'\nimport { type INoteEditorStoreSchema, editorMode } from './types'\nimport { notesKeys } from '../../../../shared-services/keys'\n\nexport const useNoteEditor$ = () => {\n    const queryClient = useQueryClient()\n\n    const { data: store } = useQuery<INoteEditorStoreSchema>({\n        queryKey: notesKeys.useNoteEditor$(),\n        staleTime: Infinity,\n        refetchOnWindowFocus: false,\n        refetchOnMount: false,\n        initialData: { open: false, id: null, editorMode: null },\n    })\n\n    const setStore = (store: INoteEditorStoreSchema) => {\n        queryClient.setQueryData<INoteEditorStoreSchema>(notesKeys.useNoteEditor$(), store)\n    }\n\n    const onCancel = () => {\n        queryClient.setQueryData<INoteEditorStoreSchema>(notesKeys.useNoteEditor$(), {\n            open: false,\n            id: null,\n            editorMode: null,\n        })\n    }\n\n    const newMode = store.editorMode === editorMode.new\n    const editMode = store.editorMode === editorMode.edit\n\n    return { store, newMode, editMode, setStore, onCancel, editorMode: store.editorMode }\n}\n","import { type Instance, types } from 'mobx-state-tree'\n\nexport const NoteEditorDialog$ = types\n    .model('NoteEditorDialog$', {\n        tagInput: '',\n    })\n    .actions((self) => ({\n        onChangeField<Key extends keyof typeof self>(field: Key, value: (typeof self)[Key]) {\n            self[field] = value\n        },\n    }))\n\nexport interface INoteEditorDialog$ extends Instance<typeof NoteEditorDialog$> {}\n","import { type ReactNode, createContext, useContext } from 'react'\nimport { type INoteEditorDialog$, NoteEditorDialog$ } from './stores/useNoteTag.store'\nconst storeContext = createContext<INoteEditorDialog$ | null>(null)\n\nexport const noteEditorDialog$ = NoteEditorDialog$.create({})\n\nexport const useNoteEditorDialog$ = (): INoteEditorDialog$ => {\n    const store = useContext(storeContext)\n    if (!store) {\n        throw new Error('NoteEditorDialog$ shall be used within StoreProvider')\n    }\n\n    return store\n}\n\nexport const NoteEditorDialog$Provider = ({ children, store }: { children: ReactNode; store: INoteEditorDialog$ }) => {\n    return <storeContext.Provider value={store}>{children}</storeContext.Provider>\n}\n"],"names":["editorModeSchema","z","enum","editorMode","Values","object","open","boolean","nullable","id","string","metadata","parentGoalEditorMode","optional","viewModeRedirect","preventRerender","default","notesKeys","useNotesFilters$","useNoteEditor$","useNoteTag$","useFetchNotes","limit","queryFilter","serverSearchInput","userId","label","useFetchNote","filter","queryClient","useQueryClient","data","store","useQuery","queryKey","staleTime","Infinity","refetchOnWindowFocus","refetchOnMount","initialData","setStore","setQueryData","onCancel","newMode","new","editMode","edit","NoteEditorDialog$","types","model","tagInput","actions","self","onChangeField","field","value","storeContext","createContext","noteEditorDialog$","create","useNoteEditorDialog$","useContext","Error","NoteEditorDialog$Provider","children"],"mappings":"mLAKO,MAAMA,EAAmBC,EAAEC,KAAK,CAAC,OAAQ,MAAO,MAAM,CAAC,EAEjDC,EAAaH,EAAiBI,OAQbH,EAAEI,OAAO,CACnCC,KAAML,EAAEM,QAAQ,EAChBJ,WAAYH,EAAiBQ,SAAS,EACtCC,GAAIR,EAAES,OAAO,EAAEF,SAAS,EACxBG,SAAUV,EACLI,OAAO,CACJO,qBAAsBZ,EAAiBQ,SAAS,EAAEK,SAAS,EAC3DC,iBAAkBd,EAAiBQ,SAAS,EAAEK,SAAS,EACvDE,gBAAiBd,EAAEM,QAAAA,EAAUS,QAAQ,EAAK,EAAEH,SAAS,CACxD,CAAA,EACAA,SAAS,CAClB,CAAC,ECzBM,MAAMI,EAAY,CAErBC,iBAAkBA,IAAM,CAAC,kBAAkB,EAC3CC,eAAgBA,IAAM,CAAC,gBAAgB,EACvCC,YAAaA,IAAM,CAAC,aAAa,EAGjCC,cAAeA,CACXC,EACAC,EACAC,EACAC,EACAC,IACC,CAAC,YAAa,gBAAiBJ,EAAOC,EAAaC,EAAmBC,EAAQC,CAAK,EACxFC,aAAeC,GAAkC,CAAC,YAAa,eAAgBA,EAAOnB,EAAE,CAE5F,ECbaU,EAAiBA,IAAM,CAChC,MAAMU,EAAcC,EAAe,EAE7B,CAAEC,KAAMC,GAAUC,EAAiC,CACrDC,SAAUjB,EAAUE,eAAe,EACnCgB,UAAWC,IACXC,qBAAsB,GACtBC,eAAgB,GAChBC,YAAa,CAAEjC,KAAM,GAAOG,GAAI,KAAMN,WAAY,IAAA,CAAK,CAC1D,EAEKqC,EAAYR,GAAkC,CAChDH,EAAYY,aAAqCxB,EAAUE,eAAe,EAAGa,CAAK,CACtF,EAEMU,EAAWA,IAAM,CACPD,EAAAA,aAAqCxB,EAAUE,iBAAkB,CACzEb,KAAM,GACNG,GAAI,KACJN,WAAY,IAAA,CACf,CACL,EAEMwC,EAAUX,EAAM7B,aAAeA,EAAWyC,IAC1CC,EAAWb,EAAM7B,aAAeA,EAAW2C,KAE1C,MAAA,CAAEd,MAAAA,EAAOW,QAAAA,EAASE,SAAAA,EAAUL,SAAAA,EAAUE,SAAAA,EAAUvC,WAAY6B,EAAM7B,UAAW,CACxF,EC7Ba4C,EAAoBC,EAC5BC,MAAM,oBAAqB,CACxBC,SAAU,EACd,CAAC,EACAC,QAAmBC,IAAA,CAChBC,cAA6CC,EAAYC,EAA2B,CAChFH,EAAKE,CAAK,EAAIC,CAAAA,CAEtB,EAAE,ECRAC,EAAeC,gBAAyC,IAAI,EAErDC,EAAoBX,EAAkBY,OAAO,CAAE,CAAA,EAE/CC,EAAuBA,IAA0B,CACpD5B,MAAAA,EAAQ6B,aAAWL,CAAY,EACrC,GAAI,CAACxB,EACK,MAAA,IAAI8B,MAAM,sDAAsD,EAGnE9B,OAAAA,CACX,EAEa+B,EAA4BA,CAAC,CAAEC,SAAAA,EAAUhC,MAAAA,CAA0D,UACpGwB,EAAa,SAAb,CAAsB,MAAOxB,EAAQgC,SAAAA,EAAS"}